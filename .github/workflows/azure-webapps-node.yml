# This workflow will build and push a node.js application to an Azure Web App when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/en-us/azure/app-service/quickstart-nodejs?tabs=linux&pivots=development-environment-cli
#
# To configure this workflow:
#
# 1. Download the Publish Profile for your Azure Web App. You can download this file from the Overview page of your Web App in the Azure Portal.
#    For more information: https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials
#
# 2. Create a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE, paste the publish profile contents as the value of the secret.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Change the value for the AZURE_WEBAPP_NAME. Optionally, change the AZURE_WEBAPP_PACKAGE_PATH and NODE_VERSION environment variables below.
#
# For more information on GitHub Actions for Azure: https://github.com/Azure/Actions
# For more information on the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: your-app-name    # set this to your application's name
  AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
  NODE_VERSION: '20.x'                # set this to the node version to use


jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: npm install, build, and test
      run: |
        npm install
        npm run build --if-present

    - name: Upload artifact for deployment job
      uses: actions/upload-artifact@v3
      with:
        name: node-app
        path: .

  deploy:
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    env:
      AWS_ACCESS_KEY_ID: ASIAVYJUHIPZEPZ3WLGK
      AWS_SECRET_ACCESS_KEY: Yl0Jwxn6C1mIHXOSNKAEhaLivlsnJBUYDMmIRW0V
      AWS_SESSION_TOKEN: IQoJb3JpZ2luX2VjEKD//////////wEaCXVzLXdlc3QtMiJGMEQCIBdClcsyXYOES++wLtD+nh0i+LdPB5MZVLlsa3L4e2aLAiBncoIp4nFxF5gr79Wh1goDj+55dxG2a5Dzp3L9eqxonSq4AghJEAEaDDM5NTc4MzM5MDE5NCIM+qdbvzcIjdNL5YhpKpUCIP+0I/KGyrKL6fvqPFMkNEyi5DeB4A1APJX/4EhRiB5o0tRGQUTla2/yvMloGhdkvvtvZusB5o8Q1jwrepSnE/b4+LHblNhazFrJsmOP4T4kQmo9WCiLq/enJ59Je6kpbYgq10V7sXw7R8dflVBecneERNSpDpyQWlxBwd1QZPqC5cnozLQ4CMGaQZ0AlTJ/FP4VWv6I+F54kNskrXE+Ya/v/cZHnij1RbpECWjL54fUSBihnLD7wt5z8kGBdVt9yOv5tmrlKIe+KW1JfBU0CnJTmWqW+wXU4+7dwcHJDuTbIlXgClfj4FWvHxV2efiGyzsS25/GCWQ1S+ggR5CBInVNWpt3SzA1qVHtJEkCAvFufghwKDCu/5y6BjqeATQ8+Pi8b2T3e8TB20N17/GTN0qu8oGLuy88LKx/jB5ozz8Tps7b3jeaJbUG7zIchyOsfTUbBCfb6HCO+Fn/fgxSsUuyILOnpiajXbnu1h/Wzmuyti/xmuR9ACnv0iyUBpnP1WyKKyQlxJEerScEvQwtGJQYLuUPhjVlShKeInvRfTdSWThoOOLMPgH8QlFSWDiB93fbSeTjQNqqMKJr

    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v3
      with:
        name: node-app

    - name: deploy to s3
      run: |
        aws s3 cp node-app s3://tajamar-s3-abde/ --recursive
